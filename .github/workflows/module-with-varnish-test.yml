name: Installation and Varnish tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  installation-and-varnish-test-suite:
    strategy:
      fail-fast: false
      matrix:
        # Last one for the current and previous minor, greatest php version
        m2-version: [ "2.3.7-p4", "2.4.5" ]
        php-version: [ "7.4", "8.1" ]
        magento-repository: [ "https://repo.magento.com/", "https://mirror.mage-os.org/" ]
        exclude:
          - { php-version: "8.1", m2-version: "2.3.7-p4" }
          - { php-version: "7.4", m2-version: "2.4.5" }

    name: Installation and Varnish test suite
    # @see https://devdocs.magento.com/marketplace/sellers/installation-and-varnish-tests.html
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(') }}
    env:
      EXTENSION_PACKAGE_NAME: "okaeli/magento2-category-code"
      EXTENSION_NAME: "Okaeli_CategoryCode"
      EXTENSION_PATH: "okaeli-category-code"
      EXTENSION_GITHUB_URL: "julienloizelet/magento2-category-code"
      EXTENSION_REF: "v1.1.10"

    steps:

      - name: Clone current repository
        uses: actions/checkout@v3

      - name: Install Magento with DDEV
        uses: ./
        with:
          php_version: ${{ matrix.php-version }}
          magento_version: ${{ matrix.m2-version }}
          composer_auth: ${{ secrets.M2_COMPOSER_AUTH }}
          magento_repository: ${{ matrix.magento-repository }}
          varnish_setup: "true"

      - name: Clone ${{ env.EXTENSION_NAME }} module files
        uses: actions/checkout@v3
        with:
          path: my-own-modules/${{ env.EXTENSION_PATH }}
          repository: ${{ env.EXTENSION_GITHUB_URL }}
          ref: ${{ env.EXTENSION_REF }}

      - name: Prepare composer repositories
        run: |
          ddev composer config --unset repositories.0
          ddev composer config repositories.0 '{"type": "path", "url":"my-own-modules/${{ env.EXTENSION_PATH }}/",  "canonical": true}'
          ddev composer config repositories.1 '{"type": "composer", "url":"${{ matrix.magento-repository }}",  "exclude": ["${{ env.EXTENSION_PACKAGE_NAME }}"]}'

      - name: Add ${{ env.EXTENSION_NAME }} as composer dependency
        run: ddev composer require ${{ env.EXTENSION_PACKAGE_NAME }}:@dev --no-interaction

      - name: Installation tests
        # chmod 777 to minimize chance to get the following error:
        # The directory "/var/www/html/generated/code" cannot be deleted Warning!rmdir(/var/www/html/generated/code): Directory not empty
        run: |
          sudo chmod -R 777 ${{ github.workspace }}
          ddev magento maintenance:enable
          ddev magento module:enable ${{ env.EXTENSION_NAME }}
          ddev magento maintenance:disable
          ddev magento setup:upgrade
          ddev magento deploy:mode:set production
          ddev magento indexer:reindex

      - name: Disable some extensions for 2.4
        if: startsWith(matrix.m2-version, '2.4')
        run: |
          sudo chmod -R 777 ${{ github.workspace }}
          rm -Rf ${{ github.workspace }}/generated
          ddev magento maintenance:enable
          ddev magento module:disable Magento_TwoFactorAuth
          ddev magento maintenance:disable

      - name: Prepare for Varnish tests
        run: |
          ddev magento config:set system/full_page_cache/caching_application 2
          ddev magento setup:performance:generate-fixtures ./varnish-profile.xml

      - name: Varnish MISS and HIT test
        run: |
          ddev magento cache:flush
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 1 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 2 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 3 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 4 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-3.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 5 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-3.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 6 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/category-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 7 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/category-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 8 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/category-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 9 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/category-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 10 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 11 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 12 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi

      - name: Varnish product update test
        run: |
          cp .ddev/custom_scripts/update-product-price.sh update-product-price.sh
          chmod +x update-product-price.sh
          ddev exec ./update-product-price.sh https://${{ env.M2_VERSION_CODE }}.ddev.site product_dynamic_1
          ddev exec ./update-product-price.sh https://${{ env.M2_VERSION_CODE }}.ddev.site product_dynamic_2
          ddev exec ./update-product-price.sh https://${{ env.M2_VERSION_CODE }}.ddev.site product_dynamic_3
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 1 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-1.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 2 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 3 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-2.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 4 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-3.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 5 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site/simple-product-3.html | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 6 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi

      - name: Varnish FPC clean test
        run: |
          ddev magento cache:clean full_page
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:MISS"* ]]
          then
            echo "Test 1 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi
          sleep 2
          VERIF=$(ddev exec curl -sSL -D - https://${{ env.M2_VERSION_CODE }}.ddev.site | grep -E "^x-eqp-cache:" | sed 's/ //g')
          if [[ $VERIF != *"x-eqp-cache:HIT"* ]]
          then
            echo "Test 2 failed"
            echo "Bad Varnish x-eqp-cache : ${VERIF}"
            exit 1
          fi

